apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.bmuschko:gradle-cargo-plugin:2.0.3"
    }
}

apply plugin: "com.bmuschko.cargo"

repositories {
    mavenLocal()
    mavenCentral()
}

war.archiveName = 'todos.war'

sourceSets {
    main {
        java {
            srcDir 'src/'
        }
    }

    test {
        java {
            srcDir 'test/'
        }
    }
}

dependencies {
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'junit:junit:4.12'
    testCompile 'org.springframework:spring-test:4.1.5.RELEASE'
    testCompile 'org.springframework:spring-core:4.1.4.RELEASE'

    compile 'org.springframework:spring-core:4.1.4.RELEASE'
    compile 'org.springframework:spring-web:4.1.4.RELEASE'
    compile 'org.springframework:spring-webmvc:4.1.4.RELEASE'
    compile 'org.springframework.data:spring-data-jpa:1.3.3.RELEASE'
    compile 'org.springframework.ws:spring-ws:2.0.2.RELEASE'

    compile 'com.fasterxml.jackson.core:jackson-core:2.5.1'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.5.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.1'

    compile 'org.jboss.spec:jboss-javaee-6.0:3.0.3.Final'

}
idea {
    module {
        sourceDirs += file('src/')
        testSourceDirs += file('test/')
    }
}

test {
    testLogging {
        events 'started', 'passed', 'skipped', 'failed'
    }
    afterTest { desc, result ->
        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

cargo {
    containerId = 'jboss71x'
    port = 8080

    deployable {
        file = file('build/libs/todos.war')
        context = 'todos'
    }

    remote {
        hostname = 'localhost'
        username = 'admin'
        password = 'password'
    }

    local {
        homeDir = file("$System.env.JBOSS_HOME")
        containerProperties { property 'cargo.jboss.configuration', 'standalone-full' }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task deployLocal(type: Copy) {
    from "build/libs/todos.war"
    into "$System.env.JBOSS_HOME/standalone/deployments"
}

[
        cargoRunLocal,
        cargoStartLocal,
        cargoDeployRemote,
        cargoRedeployRemote,
        deployLocal
].each { it.dependsOn assemble }
